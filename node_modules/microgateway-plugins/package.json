{
  "_args": [
    [
      {
        "raw": "microgateway-plugins@https://registry.npmjs.org/microgateway-plugins/-/microgateway-plugins-2.3.3.tgz",
        "scope": null,
        "escapedName": "microgateway-plugins",
        "name": "microgateway-plugins",
        "rawSpec": "https://registry.npmjs.org/microgateway-plugins/-/microgateway-plugins-2.3.3.tgz",
        "spec": "https://registry.npmjs.org/microgateway-plugins/-/microgateway-plugins-2.3.3.tgz",
        "type": "remote"
      },
      "/Users/sudheendras/Documents/sudhee/edgemicro/azure-microgateway"
    ]
  ],
  "_from": "microgateway-plugins@>=2.3.3 <3.0.0",
  "_id": "microgateway-plugins@2.3.3",
  "_inCache": true,
  "_location": "/microgateway-plugins",
  "_phantomChildren": {},
  "_requested": {
    "raw": "microgateway-plugins@https://registry.npmjs.org/microgateway-plugins/-/microgateway-plugins-2.3.3.tgz",
    "scope": null,
    "escapedName": "microgateway-plugins",
    "name": "microgateway-plugins",
    "rawSpec": "https://registry.npmjs.org/microgateway-plugins/-/microgateway-plugins-2.3.3.tgz",
    "spec": "https://registry.npmjs.org/microgateway-plugins/-/microgateway-plugins-2.3.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/microgateway-plugins/-/microgateway-plugins-2.3.3.tgz",
  "_shasum": "2b866dc76fff8dab4ba4b09ef8e11826fcc349e6",
  "_shrinkwrap": null,
  "_spec": "microgateway-plugins@https://registry.npmjs.org/microgateway-plugins/-/microgateway-plugins-2.3.3.tgz",
  "_where": "/Users/sudheendras/Documents/sudhee/edgemicro/azure-microgateway",
  "dependencies": {
    "async": "^1.4.2",
    "debug": "^2.2.0",
    "js2xmlparser": "^2.0.2",
    "jsonwebtoken": "^5.0.1",
    "lodash": "^3.10.1",
    "request": "^2.65.0",
    "toobusy-js": "^0.5.1",
    "volos-analytics-apigee": "^0.4.0",
    "volos-cache-memory": "^0.10.0",
    "volos-quota-apigee": "^0.13.0",
    "volos-quota-memory": "^0.11.0",
    "volos-spikearrest-memory": "^0.10.0",
    "xml2js": "^0.4.17"
  },
  "description": "Plugins for Apige Edge Microgateway",
  "devDependencies": {
    "async": "^1.4.2",
    "chai": "^2.3.0",
    "config": "^1.13.0",
    "debug": "^2.2.0",
    "js-yaml": "^3.4.2",
    "jsonwebtoken": "^5.0.1",
    "lodash": "^3.9.3",
    "mocha": "^2.2.4",
    "pem": "^1.7.2",
    "supertest": "^1.1.0",
    "volos-analytics-memory": "^0.2.0",
    "volos-quota-memory": "^0.11.0"
  },
  "main": "index.js",
  "name": "microgateway-plugins",
  "optionalDependencies": {},
  "readme": "#Plugins\n\nBuild Status [![Build Status](https://travis-ci.org/apigee/microgateway-plugins.svg?branch=accumulate-request-fixes)](https://travis-ci.org/apigee/microgateway-plugins)\n\n##Overview\nThis repo contains plugins for the [microgateway-core project](https://github.com/apigee/microgateway-core).  \n\nThese plugins can be loaded into the microgateway calling the load plugin method\n\n##Building a plugin\nmust contain an init method which returns an object literal with all of the handlers\n\n```javascript\n{\n  init:function(config,logger,stats){\n    return {\n    onrequest:function(req,res,[options],next){\n    },\n    ...\n    }\n  }\n}\n```\n\ninit method must return an object with handler methods for each event\n\nthe available handlers are \n\n* on_request\n* ondata_request \n* onend_request\n* on_response\n* ondata_response\n* onend_response\n* onclose_response\n* onerror_response\n\nthe handler signature will look like \n\n```javascript\nfunction(sourceRequest,sourceResponse,[options],next){}\n```\n* sourceRequest: the request from the northbound server\n* sourceResponse the response to the northbound server\n* options: are the full scope of fields you might need to operate on.  \n \n  ```javascript \n  \tconst options = {\n      targetResponse: options.targetResponse,\n      targetRequest: options.targetRequest,\n      sourceRequest: options.sourceRequest,\n      sourceResponse: options.sourceResponse,\n      data: data\n    };\n    ```\n* you must call next with an error if you errored out like\n\n```javascript \nnext([err])\n```\n",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "mocha -R spec"
  },
  "version": "2.3.3"
}
